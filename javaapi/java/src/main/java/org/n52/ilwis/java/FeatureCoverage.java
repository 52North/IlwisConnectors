/* 
Copyright (C) 2007 - 2015 52°North Initiative for Geospatial Open Source
Software GmbH

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License version 2 as published
by the Free Software Foundation.

If the program is linked with libraries which are licensed under one of
the following licenses, the combination of the program with the linked
library is not considered a "derivative work" of the program:

      • Apache License, version 2.0
      • Apache Software License, version 1.0
      • GNU Lesser General Public License, version 3
      • Mozilla Public License, versions 1.0, 1.1 and 2.0
      • Common Development and Distribution License (CDDL), version 1.0

Therefore the distribution of the program linked with libraries licensed
under the aforementioned licenses, is permitted by the copyright holders
if the distribution is compliant with both the GNU General Public
License version 2 and the aforementioned licenses.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details. 
*/ 
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.n52.ilwis.java;

public class FeatureCoverage extends Coverage implements Iterable<Feature> {
  private long swigCPtr;

  protected FeatureCoverage(long cPtr, boolean cMemoryOwn) {
    super(ilwisobjectsJNI.FeatureCoverage_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FeatureCoverage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ilwisobjectsJNI.delete_FeatureCoverage(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public FeatureCoverage() {
    this(ilwisobjectsJNI.new_FeatureCoverage__SWIG_0(), true);
  }

  public FeatureCoverage(String resource) {
    this(ilwisobjectsJNI.new_FeatureCoverage__SWIG_1(resource), true);
  }

  public FeatureIterator iterator() {
    return new FeatureIterator(ilwisobjectsJNI.FeatureCoverage_iterator(swigCPtr, this), true);
  }

  public java.math.BigInteger featureTypes() {
    return ilwisobjectsJNI.FeatureCoverage_featureTypes__SWIG_0(swigCPtr, this);
  }

  public void featureTypes(java.math.BigInteger type) {
    ilwisobjectsJNI.FeatureCoverage_featureTypes__SWIG_1(swigCPtr, this, type);
  }

  public long featureCount() {
    return ilwisobjectsJNI.FeatureCoverage_featureCount(swigCPtr, this);
  }

  public void setFeatureCount(java.math.BigInteger type, long geomCnt) {
    ilwisobjectsJNI.FeatureCoverage_setFeatureCount(swigCPtr, this, type, geomCnt);
  }

  public Feature newFeature(String wkt, CoordinateSystem csy, boolean load) {
    return new Feature(ilwisobjectsJNI.FeatureCoverage_newFeature__SWIG_0(swigCPtr, this, wkt, CoordinateSystem.getCPtr(csy), csy, load), true);
  }

  public Feature newFeature(String wkt, CoordinateSystem csy) {
    return new Feature(ilwisobjectsJNI.FeatureCoverage_newFeature__SWIG_1(swigCPtr, this, wkt, CoordinateSystem.getCPtr(csy), csy), true);
  }

  public Feature newFeature(Geometry geometry) {
    return new Feature(ilwisobjectsJNI.FeatureCoverage_newFeature__SWIG_2(swigCPtr, this, Geometry.getCPtr(geometry), geometry), true);
  }

  public Feature newFeatureFrom(Feature feat, CoordinateSystem csy) {
    return new Feature(ilwisobjectsJNI.FeatureCoverage_newFeatureFrom(swigCPtr, this, Feature.getCPtr(feat), feat, CoordinateSystem.getCPtr(csy), csy), true);
  }

  public void reprojectFeatures(CoordinateSystem csy) {
    ilwisobjectsJNI.FeatureCoverage_reprojectFeatures(swigCPtr, this, CoordinateSystem.getCPtr(csy), csy);
  }

  public Table attributeTable() {
    return new Table(ilwisobjectsJNI.FeatureCoverage_attributeTable(swigCPtr, this), true);
  }

  public void attributesFromTable(Table otherTable) {
    ilwisobjectsJNI.FeatureCoverage_attributesFromTable(swigCPtr, this, Table.getCPtr(otherTable), otherTable);
  }

  public boolean addColumn(ColumnDefinition coldef) {
    return ilwisobjectsJNI.FeatureCoverage_addColumn__SWIG_0(swigCPtr, this, ColumnDefinition.getCPtr(coldef), coldef);
  }

  public boolean addColumn(String name, String domainname) {
    return ilwisobjectsJNI.FeatureCoverage_addColumn__SWIG_1(swigCPtr, this, name, domainname);
  }

  public ColumnDefinition columndefinition(String nme) {
    return new ColumnDefinition(ilwisobjectsJNI.FeatureCoverage_columndefinition__SWIG_0(swigCPtr, this, nme), true);
  }

  public ColumnDefinition columndefinition(long index) {
    return new ColumnDefinition(ilwisobjectsJNI.FeatureCoverage_columndefinition__SWIG_1(swigCPtr, this, index), true);
  }

  public void setColumndefinition(ColumnDefinition coldef) {
    ilwisobjectsJNI.FeatureCoverage_setColumndefinition(swigCPtr, this, ColumnDefinition.getCPtr(coldef), coldef);
  }

  public long columnIndex(String nme) {
    return ilwisobjectsJNI.FeatureCoverage_columnIndex(swigCPtr, this, nme);
  }

  public ColumnDefinition get(long index) {
    return new ColumnDefinition(ilwisobjectsJNI.FeatureCoverage_get(swigCPtr, this, index), true);
  }

  public SWIGTYPE_p_QVariant checkInput(SWIGTYPE_p_QVariant inputVar, long columnIndex) {
    long cPtr = ilwisobjectsJNI.FeatureCoverage_checkInput(swigCPtr, this, SWIGTYPE_p_QVariant.getCPtr(inputVar), columnIndex);
    return (cPtr == 0) ? null : new SWIGTYPE_p_QVariant(cPtr, false);
  }

  public long definitionCount() {
    return ilwisobjectsJNI.FeatureCoverage_definitionCount(swigCPtr, this);
  }

  public long indexOf(String variantId) {
    return ilwisobjectsJNI.FeatureCoverage_indexOf__SWIG_0(swigCPtr, this, variantId);
  }

  public long indexOf(double domainItem) {
    return ilwisobjectsJNI.FeatureCoverage_indexOf__SWIG_1(swigCPtr, this, domainItem);
  }

  public String atIndex(long idx) {
    return ilwisobjectsJNI.FeatureCoverage_atIndex(swigCPtr, this, idx);
  }

  public long countSubs() {
    return ilwisobjectsJNI.FeatureCoverage_countSubs(swigCPtr, this);
  }

  public Domain subDomain() {
    return new Domain(ilwisobjectsJNI.FeatureCoverage_subDomain(swigCPtr, this), true);
  }

  public void clear() {
    ilwisobjectsJNI.FeatureCoverage_clear(swigCPtr, this);
  }

  public static FeatureCoverage toFeatureCoverage(IObject obj) {
    long cPtr = ilwisobjectsJNI.FeatureCoverage_toFeatureCoverage(IObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new FeatureCoverage(cPtr, false);
  }

  public FeatureCoverage clone() {
    long cPtr = ilwisobjectsJNI.FeatureCoverage_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new FeatureCoverage(cPtr, false);
  }

  public java.math.BigInteger geometryType(Geometry geom) {
    return ilwisobjectsJNI.FeatureCoverage_geometryType(swigCPtr, this, Geometry.getCPtr(geom), geom);
  }

  public void setCoordinateSystem(CoordinateSystem cs) {
    ilwisobjectsJNI.FeatureCoverage_setCoordinateSystem(swigCPtr, this, CoordinateSystem.getCPtr(cs), cs);
  }

}
