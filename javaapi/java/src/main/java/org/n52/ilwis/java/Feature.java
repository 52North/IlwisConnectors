/* 
Copyright (C) 2007 - 2015 52°North Initiative for Geospatial Open Source
Software GmbH

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License version 2 as published
by the Free Software Foundation.

If the program is linked with libraries which are licensed under one of
the following licenses, the combination of the program with the linked
library is not considered a "derivative work" of the program:

      • Apache License, version 2.0
      • Apache Software License, version 1.0
      • GNU Lesser General Public License, version 3
      • Mozilla Public License, versions 1.0, 1.1 and 2.0
      • Common Development and Distribution License (CDDL), version 1.0

Therefore the distribution of the program linked with libraries licensed
under the aforementioned licenses, is permitted by the copyright holders
if the distribution is compliant with both the GNU General Public
License version 2 and the aforementioned licenses.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details. 
*/ 
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.n52.ilwis.java;

public class Feature extends IObject {
  private long swigCPtr;

  protected Feature(long cPtr, boolean cMemoryOwn) {
    super(ilwisobjectsJNI.Feature_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Feature obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ilwisobjectsJNI.delete_Feature(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public boolean isValid() {
    return ilwisobjectsJNI.Feature_isValid(swigCPtr, this);
  }

  public String toString() {
    return ilwisobjectsJNI.Feature_toString(swigCPtr, this);
  }

  public VertexIterator iterator() {
    return new VertexIterator(ilwisobjectsJNI.Feature_iterator(swigCPtr, this), true);
  }

  public long attribute(String name, long defaultValue) {
    return ilwisobjectsJNI.Feature_attribute__SWIG_0(swigCPtr, this, name, defaultValue);
  }

  public double attribute(String name, double defaultValue) {
    return ilwisobjectsJNI.Feature_attribute__SWIG_1(swigCPtr, this, name, defaultValue);
  }

  public String attribute(String name, String defaultValue) {
    return ilwisobjectsJNI.Feature_attribute__SWIG_2(swigCPtr, this, name, defaultValue);
  }

  public void setAttribute(String name, SWIGTYPE_p_QVariant value) {
    ilwisobjectsJNI.Feature_setAttribute__SWIG_0(swigCPtr, this, name, SWIGTYPE_p_QVariant.getCPtr(value));
  }

  public void setAttribute(String name, long value) {
    ilwisobjectsJNI.Feature_setAttribute__SWIG_1(swigCPtr, this, name, value);
  }

  public void setAttribute(String name, double value) {
    ilwisobjectsJNI.Feature_setAttribute__SWIG_2(swigCPtr, this, name, value);
  }

  public void setAttribute(String name, String value) {
    ilwisobjectsJNI.Feature_setAttribute__SWIG_3(swigCPtr, this, name, value);
  }

  public java.math.BigInteger ilwisType() {
    return ilwisobjectsJNI.Feature_ilwisType(swigCPtr, this);
  }

  public Geometry geometry() {
    long cPtr = ilwisobjectsJNI.Feature_geometry__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new Geometry(cPtr, false);
  }

  public void geometry(Geometry geom) {
    ilwisobjectsJNI.Feature_geometry__SWIG_1(swigCPtr, this, Geometry.getCPtr(geom), geom);
  }

  public java.math.BigInteger geometryType() {
    return ilwisobjectsJNI.Feature_geometryType(swigCPtr, this);
  }

  public java.math.BigInteger featureId() {
    return ilwisobjectsJNI.Feature_featureId(swigCPtr, this);
  }

  public ColumnDefinition attributeDefinition(String name) {
    return new ColumnDefinition(ilwisobjectsJNI.Feature_attributeDefinition__SWIG_0(swigCPtr, this, name), true);
  }

  public ColumnDefinition attributeDefinition(long index) {
    return new ColumnDefinition(ilwisobjectsJNI.Feature_attributeDefinition__SWIG_1(swigCPtr, this, index), true);
  }

  public long attributeColumnCount() {
    return ilwisobjectsJNI.Feature_attributeColumnCount(swigCPtr, this);
  }

  public void removeSubFeature(String subFeatureIndex) {
    ilwisobjectsJNI.Feature_removeSubFeature__SWIG_0(swigCPtr, this, subFeatureIndex);
  }

  public void setSubFeature(String subFeatureIndex, Feature feature) {
    ilwisobjectsJNI.Feature_setSubFeature__SWIG_0(swigCPtr, this, subFeatureIndex, Feature.getCPtr(feature), feature);
  }

  public void removeSubFeature(double subFeatureIndex) {
    ilwisobjectsJNI.Feature_removeSubFeature__SWIG_1(swigCPtr, this, subFeatureIndex);
  }

  public void setSubFeature(double subFeatureIndex, Feature feature) {
    ilwisobjectsJNI.Feature_setSubFeature__SWIG_1(swigCPtr, this, subFeatureIndex, Feature.getCPtr(feature), feature);
  }

  public long subFeatureCount() {
    return ilwisobjectsJNI.Feature_subFeatureCount(swigCPtr, this);
  }

  public VertexIterator begin() {
    return new VertexIterator(ilwisobjectsJNI.Feature_begin(swigCPtr, this), true);
  }

  public VertexIterator end() {
    return new VertexIterator(ilwisobjectsJNI.Feature_end(swigCPtr, this), true);
  }

}
