/* 
Copyright (C) 2007 - 2015 52°North Initiative for Geospatial Open Source
Software GmbH

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License version 2 as published
by the Free Software Foundation.

If the program is linked with libraries which are licensed under one of
the following licenses, the combination of the program with the linked
library is not considered a "derivative work" of the program:

      • Apache License, version 2.0
      • Apache Software License, version 1.0
      • GNU Lesser General Public License, version 3
      • Mozilla Public License, versions 1.0, 1.1 and 2.0
      • Common Development and Distribution License (CDDL), version 1.0

Therefore the distribution of the program linked with libraries licensed
under the aforementioned licenses, is permitted by the copyright holders
if the distribution is compliant with both the GNU General Public
License version 2 and the aforementioned licenses.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details. 
*/ 
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.n52.ilwis.java;

public class Envelope {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Envelope(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Envelope obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ilwisobjectsJNI.delete_Envelope(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Envelope() {
    this(ilwisobjectsJNI.new_Envelope__SWIG_0(), true);
  }

  public Envelope(String envelope) {
    this(ilwisobjectsJNI.new_Envelope__SWIG_1(envelope), true);
  }

  public Envelope(Coordinate min, Coordinate max) {
    this(ilwisobjectsJNI.new_Envelope__SWIG_2(Coordinate.getCPtr(min), min, Coordinate.getCPtr(max), max), true);
  }

  public Envelope(SizeD size) {
    this(ilwisobjectsJNI.new_Envelope__SWIG_3(SizeD.getCPtr(size), size), true);
  }

  public Coordinate minCorner() {
    return new Coordinate(ilwisobjectsJNI.Envelope_minCorner(swigCPtr, this), true);
  }

  public Coordinate maxCorner() {
    return new Coordinate(ilwisobjectsJNI.Envelope_maxCorner(swigCPtr, this), true);
  }

  public SizeD size() {
    return new SizeD(ilwisobjectsJNI.Envelope_size(swigCPtr, this), true);
  }

  public boolean is3D() {
    return ilwisobjectsJNI.Envelope_is3D(swigCPtr, this);
  }

  public boolean contains(Coordinate point) {
    return ilwisobjectsJNI.Envelope_contains__SWIG_0(swigCPtr, this, Coordinate.getCPtr(point), point);
  }

  public boolean contains(Envelope box) {
    return ilwisobjectsJNI.Envelope_contains__SWIG_1(swigCPtr, this, Envelope.getCPtr(box), box);
  }

  public boolean equals(Envelope other) {
    return ilwisobjectsJNI.Envelope_equals(swigCPtr, this, Envelope.getCPtr(other), other);
  }

  public boolean notequal(Envelope other) {
    return ilwisobjectsJNI.Envelope_notequal(swigCPtr, this, Envelope.getCPtr(other), other);
  }

  public String toString() {
    return ilwisobjectsJNI.Envelope_toString(swigCPtr, this);
  }

  public boolean isValid() {
    return ilwisobjectsJNI.Envelope_isValid(swigCPtr, this);
  }

}
