/* 
Copyright (C) 2007 - 2015 52°North Initiative for Geospatial Open Source
Software GmbH

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License version 2 as published
by the Free Software Foundation.

If the program is linked with libraries which are licensed under one of
the following licenses, the combination of the program with the linked
library is not considered a "derivative work" of the program:

      • Apache License, version 2.0
      • Apache Software License, version 1.0
      • GNU Lesser General Public License, version 3
      • Mozilla Public License, versions 1.0, 1.1 and 2.0
      • Common Development and Distribution License (CDDL), version 1.0

Therefore the distribution of the program linked with libraries licensed
under the aforementioned licenses, is permitted by the copyright holders
if the distribution is compliant with both the GNU General Public
License version 2 and the aforementioned licenses.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details. 
*/ 
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.n52.ilwis.java;

public class ilwisobjectsJNI {
  public final static native boolean _initIlwisObjects(String jarg1);
  public final static native void _exitIlwisObjects();
  public final static native void disconnectIssueLogger();
  public final static native void connectIssueLogger();
  public final static native int it_FEATURE_get();
  public final static native int it_RASTER_get();
  public final static native int it_COVERAGE_get();
  public final static native int it_TABLE_get();
  public final static native int it_GEOREF_get();
  public final static native int it_COORDSYSTEM_get();
  public final static native int it_DOMAIN__get();
  public final static native int it_NUMERICDOMAIN_get();
  public final static native int it_ITEMDOMAIN_get();
  public final static native int it_OPERATIONMETADATA_get();
  public final static native int it_PROJECTION_get();
  public final static native int it_ELLIPSOID_get();
  public final static native int it_CATALOG_get();
  public final static native int it_CONTINUOUSCOLOR_get();
  public final static native int it_PALETTECOLOR_get();
  public final static native int it_VALUERANGE_get();
  public final static native long new_it();
  public final static native void delete_it(long jarg1);
  public final static native void delete_IObject(long jarg1);
  public final static native boolean IObject_isValid(long jarg1, IObject jarg1_);
  public final static native String IObject_toString(long jarg1, IObject jarg1_);
  public final static native java.math.BigInteger IObject_ilwisType(long jarg1, IObject jarg1_);
  public final static native long new_IlwisOperation__SWIG_0();
  public final static native void delete_IlwisOperation(long jarg1);
  public final static native long new_IlwisOperation__SWIG_1(long jarg1);
  public final static native long new_IlwisOperation__SWIG_2(long jarg1, IlwisOperation jarg1_);
  public final static native String IlwisOperation_getName(long jarg1, IlwisOperation jarg1_);
  public final static native String IlwisOperation_getSyntax(long jarg1, IlwisOperation jarg1_);
  public final static native String IlwisOperation_getLongname(long jarg1, IlwisOperation jarg1_);
  public final static native String IlwisOperation_getKeyword(long jarg1, IlwisOperation jarg1_);
  public final static native String IlwisOperation_getInparameters(long jarg1, IlwisOperation jarg1_);
  public final static native String IlwisOperation_getOutparameters(long jarg1, IlwisOperation jarg1_);
  public final static native long IlwisOperation_getId(long jarg1, IlwisOperation jarg1_);
  public final static native boolean IlwisOperation_isValid(long jarg1, IlwisOperation jarg1_);
  public final static native String IlwisOperation_getPinName(long jarg1, IlwisOperation jarg1_, int jarg2);
  public final static native long IlwisOperation_getPinType(long jarg1, IlwisOperation jarg1_, int jarg2);
  public final static native String IlwisOperation_getPinDesc(long jarg1, IlwisOperation jarg1_, int jarg2);
  public final static native String IlwisOperation_getPoutName(long jarg1, IlwisOperation jarg1_, int jarg2);
  public final static native long IlwisOperation_getPoutType(long jarg1, IlwisOperation jarg1_, int jarg2);
  public final static native String IlwisOperation_getPoutDesc(long jarg1, IlwisOperation jarg1_, int jarg2);
  public final static native long Engine__do__SWIG_0(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7, String jarg8, String jarg9);
  public final static native long Engine__do__SWIG_1(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7, String jarg8);
  public final static native long Engine__do__SWIG_2(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7);
  public final static native long Engine__do__SWIG_3(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6);
  public final static native long Engine__do__SWIG_4(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native long Engine__do__SWIG_5(String jarg1, String jarg2, String jarg3, String jarg4);
  public final static native long Engine__do__SWIG_6(String jarg1, String jarg2, String jarg3);
  public final static native long Engine__do__SWIG_7(String jarg1, String jarg2);
  public final static native void Engine_setWorkingCatalog(String jarg1);
  public final static native String Engine_getLocation();
  public final static native long Engine_operations__SWIG_0(String jarg1);
  public final static native long Engine_operations__SWIG_1();
  public final static native String Engine_operationMetaData(String jarg1);
  public final static native long Engine_operationVector(String jarg1);
  public final static native long Engine_getAllOperations();
  public final static native long Engine_getOperationById(long jarg1);
  public final static native void delete_Engine(long jarg1);
  public final static native int IlwisObject_cmINPUT_get();
  public final static native int IlwisObject_cmOUTPUT_get();
  public final static native int IlwisObject_cmEXTENDED_get();
  public final static native int IlwisObject_smMETADATA_get();
  public final static native int IlwisObject_smBINARYDATA_get();
  public final static native void delete_IlwisObject(long jarg1);
  public final static native void IlwisObject_open__SWIG_0(long jarg1, IlwisObject jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, IOOptions jarg5_);
  public final static native void IlwisObject_open__SWIG_1(long jarg1, IlwisObject jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void IlwisObject_open__SWIG_2(long jarg1, IlwisObject jarg1_, String jarg2, String jarg3);
  public final static native void IlwisObject_open__SWIG_3(long jarg1, IlwisObject jarg1_, String jarg2);
  public final static native void IlwisObject_store__SWIG_0(long jarg1, IlwisObject jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, IOOptions jarg5_);
  public final static native void IlwisObject_store__SWIG_1(long jarg1, IlwisObject jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void IlwisObject_store__SWIG_2(long jarg1, IlwisObject jarg1_, String jarg2, String jarg3);
  public final static native void IlwisObject_store__SWIG_3(long jarg1, IlwisObject jarg1_, String jarg2);
  public final static native boolean IlwisObject_isValid(long jarg1, IlwisObject jarg1_);
  public final static native String IlwisObject_toString(long jarg1, IlwisObject jarg1_);
  public final static native String IlwisObject_add(long jarg1, IlwisObject jarg1_, String jarg2);
  public final static native String IlwisObject___radd__(long jarg1, IlwisObject jarg1_, String jarg2);
  public final static native String IlwisObject_name__SWIG_0(long jarg1, IlwisObject jarg1_);
  public final static native void IlwisObject_name__SWIG_1(long jarg1, IlwisObject jarg1_, String jarg2);
  public final static native boolean IlwisObject_isInternal(long jarg1, IlwisObject jarg1_);
  public final static native String IlwisObject_type(long jarg1, IlwisObject jarg1_);
  public final static native String IlwisObject_type2Name(long jarg1, IlwisObject jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger IlwisObject_ilwisID(long jarg1, IlwisObject jarg1_);
  public final static native java.math.BigInteger IlwisObject_ilwisType(long jarg1, IlwisObject jarg1_);
  public final static native long new_CoordinateSystem(String jarg1);
  public final static native long CoordinateSystem_envelope(long jarg1, CoordinateSystem jarg1_);
  public final static native void CoordinateSystem_setEnvelope(long jarg1, CoordinateSystem jarg1_, long jarg2, Envelope jarg2_);
  public final static native boolean CoordinateSystem_equals(long jarg1, CoordinateSystem jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native boolean CoordinateSystem_notequal(long jarg1, CoordinateSystem jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native String CoordinateSystem_toWKT__SWIG_0(long jarg1, CoordinateSystem jarg1_, long jarg2);
  public final static native String CoordinateSystem_toWKT__SWIG_1(long jarg1, CoordinateSystem jarg1_);
  public final static native String CoordinateSystem_toProj4(long jarg1, CoordinateSystem jarg1_);
  public final static native long CoordinateSystem_convertEnvelope(long jarg1, CoordinateSystem jarg1_, long jarg2, CoordinateSystem jarg2_, long jarg3, Envelope jarg3_);
  public final static native long CoordinateSystem_coord2coord(long jarg1, CoordinateSystem jarg1_, long jarg2, CoordinateSystem jarg2_, long jarg3, Coordinate jarg3_);
  public final static native long CoordinateSystem_toCoordinateSystem(long jarg1, IObject jarg1_);
  public final static native void delete_CoordinateSystem(long jarg1);
  public final static native long new_Coordinate__SWIG_0(double jarg1, double jarg2);
  public final static native long new_Coordinate__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_Coordinate__SWIG_2(long jarg1, Coordinate jarg1_);
  public final static native double Coordinate_x(long jarg1, Coordinate jarg1_);
  public final static native double Coordinate_y(long jarg1, Coordinate jarg1_);
  public final static native double Coordinate_z(long jarg1, Coordinate jarg1_);
  public final static native void Coordinate_setX(long jarg1, Coordinate jarg1_, double jarg2);
  public final static native void Coordinate_setY(long jarg1, Coordinate jarg1_, double jarg2);
  public final static native void Coordinate_setZ(long jarg1, Coordinate jarg1_, double jarg2);
  public final static native boolean Coordinate_is3D(long jarg1, Coordinate jarg1_);
  public final static native long Coordinate_multiply(long jarg1, Coordinate jarg1_, double jarg2);
  public final static native long Coordinate_divide(long jarg1, Coordinate jarg1_, double jarg2);
  public final static native boolean Coordinate_equals(long jarg1, Coordinate jarg1_, long jarg2, Coordinate jarg2_);
  public final static native boolean Coordinate_notequal(long jarg1, Coordinate jarg1_, long jarg2, Coordinate jarg2_);
  public final static native String Coordinate_toString(long jarg1, Coordinate jarg1_);
  public final static native boolean Coordinate_isValid(long jarg1, Coordinate jarg1_);
  public final static native void delete_Coordinate(long jarg1);
  public final static native int PropertySets_pNONE_get();
  public final static native int PropertySets_pBASIC_get();
  public final static native int PropertySets_pMIN_get();
  public final static native int PropertySets_pMAX_get();
  public final static native int PropertySets_pDISTANCE_get();
  public final static native int PropertySets_pDELTA_get();
  public final static native int PropertySets_pNETTOCOUNT_get();
  public final static native int PropertySets_pCOUNT_get();
  public final static native int PropertySets_pSUM_get();
  public final static native int PropertySets_pMEAN_get();
  public final static native int PropertySets_pMEDIAN_get();
  public final static native int PropertySets_pPREDOMINANT_get();
  public final static native int PropertySets_pSTDEV_get();
  public final static native int PropertySets_pHISTOGRAM_get();
  public final static native int PropertySets_pLAST_get();
  public final static native int PropertySets_pALL_get();
  public final static native long new_PropertySets();
  public final static native void delete_PropertySets(long jarg1);
  public final static native long new_IOOptions__SWIG_0();
  public final static native long new_IOOptions__SWIG_1(String jarg1, long jarg2);
  public final static native boolean IOOptions_contains(long jarg1, IOOptions jarg1_, String jarg2);
  public final static native long IOOptions_size(long jarg1, IOOptions jarg1_);
  public final static native long IOOptions_get(long jarg1, IOOptions jarg1_, String jarg2);
  public final static native long IOOptions_addOption(long jarg1, IOOptions jarg1_, String jarg2, long jarg3);
  public final static native void delete_IOOptions(long jarg1);
  public final static native long new_ColorModel();
  public final static native void delete_ColorModel(long jarg1);
  public final static native long new_Color__SWIG_0();
  public final static native long new_Color__SWIG_1(int jarg1, long jarg2, mapsd jarg2_, String jarg3);
  public final static native long new_Color__SWIG_2(int jarg1, long jarg2, mapsd jarg2_);
  public final static native long new_Color__SWIG_3(int jarg1, long jarg2, vectord jarg2_, String jarg3);
  public final static native long new_Color__SWIG_4(int jarg1, long jarg2, vectord jarg2_);
  public final static native long new_Color__SWIG_5(String jarg1, long jarg2, mapsd jarg2_, String jarg3);
  public final static native long new_Color__SWIG_6(String jarg1, long jarg2, mapsd jarg2_);
  public final static native long new_Color__SWIG_7(String jarg1, long jarg2, vectord jarg2_, String jarg3);
  public final static native long new_Color__SWIG_8(String jarg1, long jarg2, vectord jarg2_);
  public final static native void delete_Color(long jarg1);
  public final static native double Color_getItem(long jarg1, Color jarg1_, String jarg2);
  public final static native void Color_setName(long jarg1, Color jarg1_, String jarg2);
  public final static native String Color_getName(long jarg1, Color jarg1_);
  public final static native int Color_getColorModel(long jarg1, Color jarg1_);
  public final static native String Color_toString(long jarg1, Color jarg1_);
  public final static native long new_Pixel__SWIG_0(long jarg1, Pixel jarg1_);
  public final static native long new_Pixel__SWIG_1(long jarg1, PixelD jarg1_);
  public final static native long new_Pixel__SWIG_2(int jarg1, int jarg2);
  public final static native long new_Pixel__SWIG_3(int jarg1, int jarg2, int jarg3);
  public final static native int Pixel_x(long jarg1, Pixel jarg1_);
  public final static native int Pixel_y(long jarg1, Pixel jarg1_);
  public final static native int Pixel_z(long jarg1, Pixel jarg1_);
  public final static native void Pixel_setX(long jarg1, Pixel jarg1_, int jarg2);
  public final static native void Pixel_setY(long jarg1, Pixel jarg1_, int jarg2);
  public final static native void Pixel_setZ(long jarg1, Pixel jarg1_, int jarg2);
  public final static native boolean Pixel_is3D(long jarg1, Pixel jarg1_);
  public final static native long Pixel_multiply(long jarg1, Pixel jarg1_, int jarg2);
  public final static native long Pixel_divide(long jarg1, Pixel jarg1_, int jarg2);
  public final static native boolean Pixel_equals(long jarg1, Pixel jarg1_, long jarg2, Pixel jarg2_);
  public final static native boolean Pixel_notequal(long jarg1, Pixel jarg1_, long jarg2, Pixel jarg2_);
  public final static native String Pixel_toString(long jarg1, Pixel jarg1_);
  public final static native boolean Pixel_isValid(long jarg1, Pixel jarg1_);
  public final static native void delete_Pixel(long jarg1);
  public final static native long new_PixelD__SWIG_0(long jarg1, Pixel jarg1_);
  public final static native long new_PixelD__SWIG_1(long jarg1, PixelD jarg1_);
  public final static native long new_PixelD__SWIG_2(double jarg1, double jarg2);
  public final static native long new_PixelD__SWIG_3(double jarg1, double jarg2, double jarg3);
  public final static native double PixelD_x(long jarg1, PixelD jarg1_);
  public final static native double PixelD_y(long jarg1, PixelD jarg1_);
  public final static native double PixelD_z(long jarg1, PixelD jarg1_);
  public final static native void PixelD_setX(long jarg1, PixelD jarg1_, double jarg2);
  public final static native void PixelD_setY(long jarg1, PixelD jarg1_, double jarg2);
  public final static native void PixelD_setZ(long jarg1, PixelD jarg1_, double jarg2);
  public final static native boolean PixelD_is3D(long jarg1, PixelD jarg1_);
  public final static native long PixelD_multiply(long jarg1, PixelD jarg1_, double jarg2);
  public final static native long PixelD_divide(long jarg1, PixelD jarg1_, double jarg2);
  public final static native boolean PixelD_equals(long jarg1, PixelD jarg1_, long jarg2, PixelD jarg2_);
  public final static native boolean PixelD_notequal(long jarg1, PixelD jarg1_, long jarg2, PixelD jarg2_);
  public final static native String PixelD_toString(long jarg1, PixelD jarg1_);
  public final static native boolean PixelD_isValid(long jarg1, PixelD jarg1_);
  public final static native void delete_PixelD(long jarg1);
  public final static native long new_Size__SWIG_0(long jarg1, long jarg2, long jarg3);
  public final static native long new_Size__SWIG_1(long jarg1, long jarg2);
  public final static native long new_Size__SWIG_2(long jarg1, Size jarg1_);
  public final static native long new_Size__SWIG_3(long jarg1, SizeD jarg1_);
  public final static native long Size_xsize(long jarg1, Size jarg1_);
  public final static native long Size_ysize(long jarg1, Size jarg1_);
  public final static native long Size_zsize(long jarg1, Size jarg1_);
  public final static native void Size_setXsize(long jarg1, Size jarg1_, long jarg2);
  public final static native void Size_setYsize(long jarg1, Size jarg1_, long jarg2);
  public final static native void Size_setZsize(long jarg1, Size jarg1_, long jarg2);
  public final static native java.math.BigInteger Size_linearSize(long jarg1, Size jarg1_);
  public final static native long Size_increase(long jarg1, Size jarg1_, long jarg2, Size jarg2_);
  public final static native long Size_decrease(long jarg1, Size jarg1_, long jarg2, Size jarg2_);
  public final static native long Size_multiply(long jarg1, Size jarg1_, double jarg2);
  public final static native boolean Size_equals(long jarg1, Size jarg1_, long jarg2, Size jarg2_);
  public final static native boolean Size_notequal(long jarg1, Size jarg1_, long jarg2, Size jarg2_);
  public final static native boolean Size_contains__SWIG_0(long jarg1, Size jarg1_, long jarg2, Coordinate jarg2_);
  public final static native boolean Size_contains__SWIG_1(long jarg1, Size jarg1_, long jarg2, Pixel jarg2_);
  public final static native boolean Size_contains__SWIG_2(long jarg1, Size jarg1_, long jarg2, PixelD jarg2_);
  public final static native String Size_toString(long jarg1, Size jarg1_);
  public final static native boolean Size_isValid(long jarg1, Size jarg1_);
  public final static native void delete_Size(long jarg1);
  public final static native long new_SizeD__SWIG_0(double jarg1, double jarg2, double jarg3);
  public final static native long new_SizeD__SWIG_1(double jarg1, double jarg2);
  public final static native long new_SizeD__SWIG_2(long jarg1, Size jarg1_);
  public final static native long new_SizeD__SWIG_3(long jarg1, SizeD jarg1_);
  public final static native double SizeD_xsize(long jarg1, SizeD jarg1_);
  public final static native double SizeD_ysize(long jarg1, SizeD jarg1_);
  public final static native double SizeD_zsize(long jarg1, SizeD jarg1_);
  public final static native void SizeD_setXsize(long jarg1, SizeD jarg1_, double jarg2);
  public final static native void SizeD_setYsize(long jarg1, SizeD jarg1_, double jarg2);
  public final static native void SizeD_setZsize(long jarg1, SizeD jarg1_, double jarg2);
  public final static native java.math.BigInteger SizeD_linearSize(long jarg1, SizeD jarg1_);
  public final static native long SizeD_increase(long jarg1, SizeD jarg1_, long jarg2, SizeD jarg2_);
  public final static native long SizeD_decrease(long jarg1, SizeD jarg1_, long jarg2, SizeD jarg2_);
  public final static native long SizeD_multiply(long jarg1, SizeD jarg1_, double jarg2);
  public final static native boolean SizeD_equals(long jarg1, SizeD jarg1_, long jarg2, SizeD jarg2_);
  public final static native boolean SizeD_notequal(long jarg1, SizeD jarg1_, long jarg2, SizeD jarg2_);
  public final static native boolean SizeD_contains__SWIG_0(long jarg1, SizeD jarg1_, long jarg2, Coordinate jarg2_);
  public final static native boolean SizeD_contains__SWIG_1(long jarg1, SizeD jarg1_, long jarg2, Pixel jarg2_);
  public final static native boolean SizeD_contains__SWIG_2(long jarg1, SizeD jarg1_, long jarg2, PixelD jarg2_);
  public final static native String SizeD_toString(long jarg1, SizeD jarg1_);
  public final static native boolean SizeD_isValid(long jarg1, SizeD jarg1_);
  public final static native void delete_SizeD(long jarg1);
  public final static native long new_Box__SWIG_0();
  public final static native long new_Box__SWIG_1(String jarg1);
  public final static native long new_Box__SWIG_2(long jarg1, Pixel jarg1_, long jarg2, Pixel jarg2_);
  public final static native long new_Box__SWIG_3(long jarg1, Size jarg1_);
  public final static native long Box_minCorner(long jarg1, Box jarg1_);
  public final static native long Box_maxCorner(long jarg1, Box jarg1_);
  public final static native long Box_size(long jarg1, Box jarg1_);
  public final static native boolean Box_is3D(long jarg1, Box jarg1_);
  public final static native boolean Box_contains__SWIG_0(long jarg1, Box jarg1_, long jarg2, Pixel jarg2_);
  public final static native boolean Box_contains__SWIG_1(long jarg1, Box jarg1_, long jarg2, Box jarg2_);
  public final static native boolean Box_equals(long jarg1, Box jarg1_, long jarg2, Box jarg2_);
  public final static native boolean Box_notequal(long jarg1, Box jarg1_, long jarg2, Box jarg2_);
  public final static native String Box_toString(long jarg1, Box jarg1_);
  public final static native boolean Box_isValid(long jarg1, Box jarg1_);
  public final static native void delete_Box(long jarg1);
  public final static native long new_Envelope__SWIG_0();
  public final static native long new_Envelope__SWIG_1(String jarg1);
  public final static native long new_Envelope__SWIG_2(long jarg1, Coordinate jarg1_, long jarg2, Coordinate jarg2_);
  public final static native long new_Envelope__SWIG_3(long jarg1, SizeD jarg1_);
  public final static native long Envelope_minCorner(long jarg1, Envelope jarg1_);
  public final static native long Envelope_maxCorner(long jarg1, Envelope jarg1_);
  public final static native long Envelope_size(long jarg1, Envelope jarg1_);
  public final static native boolean Envelope_is3D(long jarg1, Envelope jarg1_);
  public final static native boolean Envelope_contains__SWIG_0(long jarg1, Envelope jarg1_, long jarg2, Coordinate jarg2_);
  public final static native boolean Envelope_contains__SWIG_1(long jarg1, Envelope jarg1_, long jarg2, Envelope jarg2_);
  public final static native boolean Envelope_equals(long jarg1, Envelope jarg1_, long jarg2, Envelope jarg2_);
  public final static native boolean Envelope_notequal(long jarg1, Envelope jarg1_, long jarg2, Envelope jarg2_);
  public final static native String Envelope_toString(long jarg1, Envelope jarg1_);
  public final static native boolean Envelope_isValid(long jarg1, Envelope jarg1_);
  public final static native void delete_Envelope(long jarg1);
  public final static native long new_Table__SWIG_0();
  public final static native long new_Table__SWIG_1(String jarg1, long jarg2, IOOptions jarg2_);
  public final static native long new_Table__SWIG_2(String jarg1);
  public final static native long Table_columnCount(long jarg1, Table jarg1_);
  public final static native long Table_columns(long jarg1, Table jarg1_);
  public final static native boolean Table_addColumn__SWIG_0(long jarg1, Table jarg1_, String jarg2, String jarg3);
  public final static native boolean Table_addColumn__SWIG_1(long jarg1, Table jarg1_, long jarg2, ColumnDefinition jarg2_);
  public final static native int Table_columnIndex(long jarg1, Table jarg1_, String jarg2);
  public final static native long Table_column__SWIG_0(long jarg1, Table jarg1_, String jarg2);
  public final static native long Table_column__SWIG_1(long jarg1, Table jarg1_, long jarg2);
  public final static native long Table_recordCount(long jarg1, Table jarg1_);
  public final static native long Table_select(long jarg1, Table jarg1_, String jarg2);
  public final static native long Table_record(long jarg1, Table jarg1_, long jarg2);
  public final static native String Table_cell__SWIG_0(long jarg1, Table jarg1_, String jarg2, long jarg3);
  public final static native String Table_cell__SWIG_1(long jarg1, Table jarg1_, long jarg2, long jarg3);
  public final static native void Table_setCell__SWIG_0(long jarg1, Table jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void Table_setCell__SWIG_1(long jarg1, Table jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void Table_setCell__SWIG_2(long jarg1, Table jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native void Table_setCell__SWIG_3(long jarg1, Table jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void Table_setCell__SWIG_4(long jarg1, Table jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native void Table_setCell__SWIG_5(long jarg1, Table jarg1_, long jarg2, long jarg3, String jarg4);
  public final static native void Table_setCell__SWIG_6(long jarg1, Table jarg1_, String jarg2, long jarg3, double jarg4);
  public final static native void Table_setCell__SWIG_7(long jarg1, Table jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long Table_toTable(long jarg1, IObject jarg1_);
  public final static native long Table_columnDefinition__SWIG_0(long jarg1, Table jarg1_, String jarg2);
  public final static native long Table_columnDefinition__SWIG_1(long jarg1, Table jarg1_, long jarg2);
  public final static native void Table_setColumnDefinition__SWIG_0(long jarg1, Table jarg1_, long jarg2, ColumnDefinition jarg2_);
  public final static native void Table_setColumnDefinition__SWIG_1(long jarg1, Table jarg1_, String jarg2, long jarg3, ColumnDefinition jarg3_);
  public final static native void Table_setColumnDefinition__SWIG_2(long jarg1, Table jarg1_, long jarg2, long jarg3, ColumnDefinition jarg3_);
  public final static native void delete_Table(long jarg1);
  public final static native void delete_Coverage(long jarg1);
  public final static native long Coverage_coordinateSystem(long jarg1, Coverage jarg1_);
  public final static native long Coverage_envelope(long jarg1, Coverage jarg1_);
  public final static native void Coverage_setEnvelope(long jarg1, Coverage jarg1_, long jarg2, Envelope jarg2_);
  public final static native long new_Geometry__SWIG_0(String jarg1, long jarg2, CoordinateSystem jarg2_);
  public final static native long new_Geometry__SWIG_1(long jarg1, Feature jarg1_);
  public final static native void delete_Geometry(long jarg1);
  public final static native boolean Geometry_isValid(long jarg1, Geometry jarg1_);
  public final static native String Geometry_toString(long jarg1, Geometry jarg1_);
  public final static native java.math.BigInteger Geometry_ilwisType(long jarg1, Geometry jarg1_);
  public final static native void Geometry_fromWKT(long jarg1, Geometry jarg1_, String jarg2);
  public final static native long Geometry_fromWKTReader(long jarg1, Geometry jarg1_, String jarg2);
  public final static native String Geometry_toWKT(long jarg1, Geometry jarg1_);
  public final static native long Geometry_coordinateSystem(long jarg1, Geometry jarg1_);
  public final static native void Geometry_setCoordinateSystem(long jarg1, Geometry jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native long Geometry_transform(long jarg1, Geometry jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native long Geometry_envelope(long jarg1, Geometry jarg1_);
  public final static native long Geometry_iterator(long jarg1, Geometry jarg1_);
  public final static native boolean Geometry_isSimple(long jarg1, Geometry jarg1_);
  public final static native boolean Geometry_within(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_contains(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_disjoint(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_touches(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_intersects(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_crosses(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_overlaps(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_equals(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_equalsExact__SWIG_0(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_, double jarg3);
  public final static native boolean Geometry_equalsExact__SWIG_1(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_covers(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_coveredBy(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native boolean Geometry_relate(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_, String jarg3);
  public final static native double Geometry_distance(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native double Geometry_getArea(long jarg1, Geometry jarg1_);
  public final static native double Geometry_getLength(long jarg1, Geometry jarg1_);
  public final static native boolean Geometry_isWithinDistance(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_, double jarg3);
  public final static native long Geometry_buffer(long jarg1, Geometry jarg1_, double jarg2);
  public final static native long Geometry_convexHull(long jarg1, Geometry jarg1_);
  public final static native long Geometry_intersection(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native long Geometry_Union(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native long Geometry_difference(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native long Geometry_symDifference(long jarg1, Geometry jarg1_, long jarg2, Geometry jarg2_);
  public final static native int COVERAGEATRIB_get();
  public final static native boolean Feature_isValid(long jarg1, Feature jarg1_);
  public final static native String Feature_toString(long jarg1, Feature jarg1_);
  public final static native long Feature_iterator(long jarg1, Feature jarg1_);
  public final static native long Feature_attribute__SWIG_0(long jarg1, Feature jarg1_, String jarg2, long jarg3);
  public final static native double Feature_attribute__SWIG_1(long jarg1, Feature jarg1_, String jarg2, double jarg3);
  public final static native String Feature_attribute__SWIG_2(long jarg1, Feature jarg1_, String jarg2, String jarg3);
  public final static native void Feature_setAttribute__SWIG_0(long jarg1, Feature jarg1_, String jarg2, long jarg3);
  public final static native void Feature_setAttribute__SWIG_1(long jarg1, Feature jarg1_, String jarg2, long jarg3);
  public final static native void Feature_setAttribute__SWIG_2(long jarg1, Feature jarg1_, String jarg2, double jarg3);
  public final static native void Feature_setAttribute__SWIG_3(long jarg1, Feature jarg1_, String jarg2, String jarg3);
  public final static native java.math.BigInteger Feature_ilwisType(long jarg1, Feature jarg1_);
  public final static native long Feature_geometry__SWIG_0(long jarg1, Feature jarg1_);
  public final static native void Feature_geometry__SWIG_1(long jarg1, Feature jarg1_, long jarg2, Geometry jarg2_);
  public final static native java.math.BigInteger Feature_geometryType(long jarg1, Feature jarg1_);
  public final static native java.math.BigInteger Feature_featureId(long jarg1, Feature jarg1_);
  public final static native long Feature_attributeDefinition__SWIG_0(long jarg1, Feature jarg1_, String jarg2);
  public final static native long Feature_attributeDefinition__SWIG_1(long jarg1, Feature jarg1_, long jarg2);
  public final static native long Feature_attributeColumnCount(long jarg1, Feature jarg1_);
  public final static native void Feature_removeSubFeature__SWIG_0(long jarg1, Feature jarg1_, String jarg2);
  public final static native void Feature_setSubFeature__SWIG_0(long jarg1, Feature jarg1_, String jarg2, long jarg3, Feature jarg3_);
  public final static native void Feature_removeSubFeature__SWIG_1(long jarg1, Feature jarg1_, double jarg2);
  public final static native void Feature_setSubFeature__SWIG_1(long jarg1, Feature jarg1_, double jarg2, long jarg3, Feature jarg3_);
  public final static native long Feature_subFeatureCount(long jarg1, Feature jarg1_);
  public final static native long Feature_begin(long jarg1, Feature jarg1_);
  public final static native long Feature_end(long jarg1, Feature jarg1_);
  public final static native void delete_Feature(long jarg1);
  public final static native long new_FeatureIterator__SWIG_0(long jarg1, FeatureCoverage jarg1_);
  public final static native long new_FeatureIterator__SWIG_1(long jarg1, FeatureIterator jarg1_);
  public final static native long FeatureIterator_next(long jarg1, FeatureIterator jarg1_);
  public final static native boolean FeatureIterator_hasNext(long jarg1, FeatureIterator jarg1_);
  public final static native long FeatureIterator_current(long jarg1, FeatureIterator jarg1_);
  public final static native long FeatureIterator_iterator(long jarg1, FeatureIterator jarg1_);
  public final static native String FeatureIterator_toString(long jarg1, FeatureIterator jarg1_);
  public final static native boolean FeatureIterator_isValid(long jarg1, FeatureIterator jarg1_);
  public final static native boolean FeatureIterator_equals(long jarg1, FeatureIterator jarg1_, long jarg2, FeatureIterator jarg2_);
  public final static native boolean FeatureIterator_notequal(long jarg1, FeatureIterator jarg1_, long jarg2, FeatureIterator jarg2_);
  public final static native long FeatureIterator_add(long jarg1, FeatureIterator jarg1_, int jarg2);
  public final static native long FeatureIterator___radd__(long jarg1, FeatureIterator jarg1_, int jarg2);
  public final static native long FeatureIterator_subtract(long jarg1, FeatureIterator jarg1_, int jarg2);
  public final static native void delete_FeatureIterator(long jarg1);
  public final static native long new_FeatureCoverage__SWIG_0();
  public final static native long new_FeatureCoverage__SWIG_1(String jarg1);
  public final static native long FeatureCoverage_iterator(long jarg1, FeatureCoverage jarg1_);
  public final static native java.math.BigInteger FeatureCoverage_featureTypes__SWIG_0(long jarg1, FeatureCoverage jarg1_);
  public final static native void FeatureCoverage_featureTypes__SWIG_1(long jarg1, FeatureCoverage jarg1_, java.math.BigInteger jarg2);
  public final static native long FeatureCoverage_featureCount(long jarg1, FeatureCoverage jarg1_);
  public final static native void FeatureCoverage_setFeatureCount(long jarg1, FeatureCoverage jarg1_, java.math.BigInteger jarg2, long jarg3);
  public final static native long FeatureCoverage_newFeature__SWIG_0(long jarg1, FeatureCoverage jarg1_, String jarg2, long jarg3, CoordinateSystem jarg3_, boolean jarg4);
  public final static native long FeatureCoverage_newFeature__SWIG_1(long jarg1, FeatureCoverage jarg1_, String jarg2, long jarg3, CoordinateSystem jarg3_);
  public final static native long FeatureCoverage_newFeature__SWIG_2(long jarg1, FeatureCoverage jarg1_, long jarg2, Geometry jarg2_);
  public final static native long FeatureCoverage_newFeatureFrom(long jarg1, FeatureCoverage jarg1_, long jarg2, Feature jarg2_, long jarg3, CoordinateSystem jarg3_);
  public final static native void FeatureCoverage_reprojectFeatures(long jarg1, FeatureCoverage jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native long FeatureCoverage_attributeTable(long jarg1, FeatureCoverage jarg1_);
  public final static native void FeatureCoverage_attributesFromTable(long jarg1, FeatureCoverage jarg1_, long jarg2, Table jarg2_);
  public final static native boolean FeatureCoverage_addColumn__SWIG_0(long jarg1, FeatureCoverage jarg1_, long jarg2, ColumnDefinition jarg2_);
  public final static native boolean FeatureCoverage_addColumn__SWIG_1(long jarg1, FeatureCoverage jarg1_, String jarg2, String jarg3);
  public final static native long FeatureCoverage_columndefinition__SWIG_0(long jarg1, FeatureCoverage jarg1_, String jarg2);
  public final static native long FeatureCoverage_columndefinition__SWIG_1(long jarg1, FeatureCoverage jarg1_, long jarg2);
  public final static native void FeatureCoverage_setColumndefinition(long jarg1, FeatureCoverage jarg1_, long jarg2, ColumnDefinition jarg2_);
  public final static native long FeatureCoverage_columnIndex(long jarg1, FeatureCoverage jarg1_, String jarg2);
  public final static native long FeatureCoverage_get(long jarg1, FeatureCoverage jarg1_, long jarg2);
  public final static native long FeatureCoverage_checkInput(long jarg1, FeatureCoverage jarg1_, long jarg2, long jarg3);
  public final static native long FeatureCoverage_definitionCount(long jarg1, FeatureCoverage jarg1_);
  public final static native long FeatureCoverage_indexOf__SWIG_0(long jarg1, FeatureCoverage jarg1_, String jarg2);
  public final static native long FeatureCoverage_indexOf__SWIG_1(long jarg1, FeatureCoverage jarg1_, double jarg2);
  public final static native String FeatureCoverage_atIndex(long jarg1, FeatureCoverage jarg1_, long jarg2);
  public final static native long FeatureCoverage_countSubs(long jarg1, FeatureCoverage jarg1_);
  public final static native long FeatureCoverage_subDomain(long jarg1, FeatureCoverage jarg1_);
  public final static native void FeatureCoverage_clear(long jarg1, FeatureCoverage jarg1_);
  public final static native long FeatureCoverage_toFeatureCoverage(long jarg1, IObject jarg1_);
  public final static native long FeatureCoverage_clone(long jarg1, FeatureCoverage jarg1_);
  public final static native java.math.BigInteger FeatureCoverage_geometryType(long jarg1, FeatureCoverage jarg1_, long jarg2, Geometry jarg2_);
  public final static native void FeatureCoverage_setCoordinateSystem(long jarg1, FeatureCoverage jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native void delete_FeatureCoverage(long jarg1);
  public final static native long new_Flow();
  public final static native void delete_Flow(long jarg1);
  public final static native long new_PixelIterator__SWIG_0(long jarg1, PixelIterator jarg1_);
  public final static native long new_PixelIterator__SWIG_1(long jarg1, RasterCoverage jarg1_, long jarg2, Box jarg2_);
  public final static native long new_PixelIterator__SWIG_2(long jarg1, RasterCoverage jarg1_);
  public final static native long new_PixelIterator__SWIG_3(long jarg1, RasterCoverage jarg1_, long jarg2, Geometry jarg2_);
  public final static native long new_PixelIterator__SWIG_4(long jarg1);
  public final static native void delete_PixelIterator(long jarg1);
  public final static native long PixelIterator_iterator(long jarg1, PixelIterator jarg1_);
  public final static native double PixelIterator__next(long jarg1, PixelIterator jarg1_);
  public final static native boolean PixelIterator_hasNext(long jarg1, PixelIterator jarg1_);
  public final static native boolean PixelIterator_isValid(long jarg1, PixelIterator jarg1_);
  public final static native String PixelIterator_toString(long jarg1, PixelIterator jarg1_);
  public final static native double PixelIterator_toDouble(long jarg1, PixelIterator jarg1_);
  public final static native java.math.BigInteger PixelIterator_toBigInteger(long jarg1, PixelIterator jarg1_);
  public final static native boolean PixelIterator_contains(long jarg1, PixelIterator jarg1_, long jarg2, Pixel jarg2_);
  public final static native long PixelIterator_box(long jarg1, PixelIterator jarg1_);
  public final static native long PixelIterator_position(long jarg1, PixelIterator jarg1_);
  public final static native void PixelIterator_setFlow(long jarg1, PixelIterator jarg1_, int jarg2);
  public final static native boolean PixelIterator_xChanged(long jarg1, PixelIterator jarg1_);
  public final static native boolean PixelIterator_yChanged(long jarg1, PixelIterator jarg1_);
  public final static native boolean PixelIterator_zChanged(long jarg1, PixelIterator jarg1_);
  public final static native long PixelIterator_set__SWIG_0(long jarg1, PixelIterator jarg1_, long jarg2, PixelIterator jarg2_);
  public final static native long PixelIterator_get__SWIG_0(long jarg1, PixelIterator jarg1_, long jarg2, Pixel jarg2_);
  public final static native double PixelIterator_get__SWIG_1(long jarg1, PixelIterator jarg1_, long jarg2);
  public final static native void PixelIterator_set__SWIG_1(long jarg1, PixelIterator jarg1_, long jarg2, double jarg3);
  public final static native long PixelIterator_add(long jarg1, PixelIterator jarg1_, int jarg2);
  public final static native long PixelIterator___radd__(long jarg1, PixelIterator jarg1_, int jarg2);
  public final static native long PixelIterator_increase(long jarg1, PixelIterator jarg1_, int jarg2);
  public final static native boolean PixelIterator_notequal(long jarg1, PixelIterator jarg1_, long jarg2, PixelIterator jarg2_);
  public final static native int PixelIterator_compareTo(long jarg1, PixelIterator jarg1_, long jarg2, PixelIterator jarg2_);
  public final static native long PixelIterator_end(long jarg1, PixelIterator jarg1_);
  public final static native long PixelIterator_raster(long jarg1, PixelIterator jarg1_);
  public final static native long new_GeoReference(String jarg1);
  public final static native long GeoReference_toGeoReference(long jarg1, IObject jarg1_);
  public final static native long GeoReference_coordinateSystem(long jarg1, GeoReference jarg1_);
  public final static native void GeoReference_setCoordinateSystem(long jarg1, GeoReference jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native long GeoReference_pixel2Coord__SWIG_0(long jarg1, GeoReference jarg1_, long jarg2, PixelD jarg2_);
  public final static native long GeoReference_pixel2Coord__SWIG_1(long jarg1, GeoReference jarg1_, long jarg2, Pixel jarg2_);
  public final static native long GeoReference_coord2Pixel(long jarg1, GeoReference jarg1_, long jarg2, Coordinate jarg2_);
  public final static native long GeoReference_box2Envelope(long jarg1, GeoReference jarg1_, long jarg2, Box jarg2_);
  public final static native long GeoReference_envelope2Box(long jarg1, GeoReference jarg1_, long jarg2, Envelope jarg2_);
  public final static native double GeoReference_pixelSize(long jarg1, GeoReference jarg1_);
  public final static native long GeoReference_size(long jarg1, GeoReference jarg1_);
  public final static native void GeoReference_setSize(long jarg1, GeoReference jarg1_, long jarg2, Size jarg2_);
  public final static native boolean GeoReference_centerOfPixel(long jarg1, GeoReference jarg1_);
  public final static native void GeoReference_setCenterOfPixel(long jarg1, GeoReference jarg1_, boolean jarg2);
  public final static native boolean GeoReference_isCompatible(long jarg1, GeoReference jarg1_, long jarg2, GeoReference jarg2_);
  public final static native boolean GeoReference_compute(long jarg1, GeoReference jarg1_);
  public final static native java.math.BigInteger GeoReference_ilwisType(long jarg1, GeoReference jarg1_);
  public final static native void delete_GeoReference(long jarg1);
  public final static native long new_RasterCoverage__SWIG_0();
  public final static native long new_RasterCoverage__SWIG_1(String jarg1);
  public final static native void delete_RasterCoverage(long jarg1);
  public final static native long RasterCoverage_add__SWIG_0(long jarg1, RasterCoverage jarg1_, long jarg2, RasterCoverage jarg2_);
  public final static native long RasterCoverage_add__SWIG_1(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native long RasterCoverage___radd__(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native long RasterCoverage_subtract__SWIG_0(long jarg1, RasterCoverage jarg1_, long jarg2, RasterCoverage jarg2_);
  public final static native long RasterCoverage_subtract__SWIG_1(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native long RasterCoverage___rsub__(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native long RasterCoverage_multiply__SWIG_0(long jarg1, RasterCoverage jarg1_, long jarg2, RasterCoverage jarg2_);
  public final static native long RasterCoverage_multiply__SWIG_1(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native long RasterCoverage___rmul__(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native long RasterCoverage___truediv____SWIG_0(long jarg1, RasterCoverage jarg1_, long jarg2, RasterCoverage jarg2_);
  public final static native long RasterCoverage___truediv____SWIG_1(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native long RasterCoverage___rtruediv__(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native long RasterCoverage_iterator(long jarg1, RasterCoverage jarg1_);
  public final static native double RasterCoverage_coord2value(long jarg1, RasterCoverage jarg1_, long jarg2, Coordinate jarg2_);
  public final static native double RasterCoverage_pix2value__SWIG_0(long jarg1, RasterCoverage jarg1_, long jarg2, Pixel jarg2_);
  public final static native double RasterCoverage_pix2value__SWIG_1(long jarg1, RasterCoverage jarg1_, long jarg2, PixelD jarg2_);
  public final static native long RasterCoverage_size(long jarg1, RasterCoverage jarg1_);
  public final static native void RasterCoverage_setSize(long jarg1, RasterCoverage jarg1_, long jarg2, Size jarg2_);
  public final static native void RasterCoverage_unloadBinary(long jarg1, RasterCoverage jarg1_);
  public final static native long RasterCoverage_coordinateSystem(long jarg1, RasterCoverage jarg1_);
  public final static native long RasterCoverage_geoReference(long jarg1, RasterCoverage jarg1_);
  public final static native void RasterCoverage_setGeoReference(long jarg1, RasterCoverage jarg1_, long jarg2, GeoReference jarg2_);
  public final static native long RasterCoverage_datadef(long jarg1, RasterCoverage jarg1_);
  public final static native void RasterCoverage_setDataDef__SWIG_0(long jarg1, RasterCoverage jarg1_, long jarg2, DataDefinition jarg2_);
  public final static native void RasterCoverage_setDataDef__SWIG_1(long jarg1, RasterCoverage jarg1_, long jarg2, Domain jarg2_);
  public final static native long RasterCoverage_statistics__SWIG_0(long jarg1, RasterCoverage jarg1_, int jarg2, int jarg3);
  public final static native long RasterCoverage_statistics__SWIG_1(long jarg1, RasterCoverage jarg1_, int jarg2);
  public final static native long RasterCoverage_statistics__SWIG_2(long jarg1, RasterCoverage jarg1_);
  public final static native long RasterCoverage_toRasterCoverage(long jarg1, IObject jarg1_);
  public final static native long RasterCoverage_begin(long jarg1, RasterCoverage jarg1_);
  public final static native long RasterCoverage_end(long jarg1, RasterCoverage jarg1_);
  public final static native long RasterCoverage_band__SWIG_0(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native long RasterCoverage_band__SWIG_1(long jarg1, RasterCoverage jarg1_, String jarg2);
  public final static native long RasterCoverage_indexOf__SWIG_0(long jarg1, RasterCoverage jarg1_, String jarg2);
  public final static native long RasterCoverage_indexOf__SWIG_1(long jarg1, RasterCoverage jarg1_, double jarg2);
  public final static native String RasterCoverage_atIndex(long jarg1, RasterCoverage jarg1_, long jarg2);
  public final static native long RasterCoverage_countSubs(long jarg1, RasterCoverage jarg1_);
  public final static native long RasterCoverage_subDomain(long jarg1, RasterCoverage jarg1_);
  public final static native void RasterCoverage_clear(long jarg1, RasterCoverage jarg1_);
  public final static native long RasterCoverage_select__SWIG_0(long jarg1, RasterCoverage jarg1_, String jarg2);
  public final static native long RasterCoverage_select__SWIG_1(long jarg1, RasterCoverage jarg1_, long jarg2, Geometry jarg2_);
  public final static native long RasterCoverage_reprojectRaster(long jarg1, RasterCoverage jarg1_, String jarg2, long jarg3, String jarg4);
  public final static native long RasterCoverage_clone(long jarg1, RasterCoverage jarg1_);
  public final static native long RasterCoverage_envelope(long jarg1, RasterCoverage jarg1_);
  public final static native long new_Catalog__SWIG_0(String jarg1, String jarg2);
  public final static native long new_Catalog__SWIG_1(String jarg1);
  public final static native void delete_Catalog(long jarg1);
  public final static native boolean Catalog_isValid(long jarg1, Catalog jarg1_);
  public final static native String Catalog_toString(long jarg1, Catalog jarg1_);
  public final static native java.math.BigInteger Catalog_ilwisType(long jarg1, Catalog jarg1_);
  public final static native long Catalog_items(long jarg1, Catalog jarg1_);
  public final static native long Catalog__getitem(long jarg1, Catalog jarg1_, String jarg2);
  public final static native long Catalog_toCatalog(long jarg1, Catalog jarg1_, long jarg2, IObject jarg2_);
  public final static native int Domain_cSELF_get();
  public final static native int Domain_cPARENT_get();
  public final static native int Domain_cDECLARED_get();
  public final static native int Domain_cNONE_get();
  public final static native long new_Domain();
  public final static native void delete_Domain(long jarg1);
  public final static native boolean Domain_isStrict(long jarg1, Domain jarg1_);
  public final static native void Domain_setStrict(long jarg1, Domain jarg1_, boolean jarg2);
  public final static native long Domain_parent(long jarg1, Domain jarg1_);
  public final static native void Domain_setParent(long jarg1, Domain jarg1_, long jarg2, Domain jarg2_);
  public final static native long Domain_getRange(long jarg1, Domain jarg1_);
  public final static native String Domain_contains__SWIG_0(long jarg1, Domain jarg1_, double jarg2);
  public final static native String Domain_contains__SWIG_1(long jarg1, Domain jarg1_, String jarg2);
  public final static native boolean Domain_isCompatibleWith(long jarg1, Domain jarg1_, long jarg2, Domain jarg2_);
  public final static native void Domain_setRange(long jarg1, Domain jarg1_, long jarg2, Range jarg2_);
  public final static native java.math.BigInteger Domain_valueType(long jarg1, Domain jarg1_);
  public final static native long Domain_toDomain(long jarg1, IObject jarg1_);
  public final static native long new_NumericDomain__SWIG_0();
  public final static native long new_NumericDomain__SWIG_1(String jarg1);
  public final static native long NumericDomain_toNumericDomain(long jarg1, IObject jarg1_);
  public final static native void delete_NumericDomain(long jarg1);
  public final static native long new_ItemDomain__SWIG_0();
  public final static native long new_ItemDomain__SWIG_1(long jarg1, Range jarg1_);
  public final static native long ItemDomain_count(long jarg1, ItemDomain jarg1_);
  public final static native void ItemDomain_setTheme(long jarg1, ItemDomain jarg1_, String jarg2);
  public final static native String ItemDomain_theme(long jarg1, ItemDomain jarg1_);
  public final static native void ItemDomain_removeItem(long jarg1, ItemDomain jarg1_, String jarg2);
  public final static native void ItemDomain_range(long jarg1, ItemDomain jarg1_, long jarg2, Range jarg2_);
  public final static native void delete_ItemDomain(long jarg1);
  public final static native long new_ColorDomain__SWIG_0();
  public final static native long new_ColorDomain__SWIG_1(String jarg1);
  public final static native java.math.BigInteger ColorDomain_ilwisType(long jarg1, ColorDomain jarg1_);
  public final static native String ColorDomain_containsColor(long jarg1, ColorDomain jarg1_, long jarg2, Color jarg2_);
  public final static native void delete_ColorDomain(long jarg1);
  public final static native long new_TextDomain__SWIG_0();
  public final static native long new_TextDomain__SWIG_1(String jarg1);
  public final static native void delete_TextDomain(long jarg1);
  public final static native long new_TimeDomain__SWIG_0();
  public final static native long new_TimeDomain__SWIG_1(String jarg1);
  public final static native long new_TimeDomain__SWIG_2(long jarg1, Range jarg1_);
  public final static native void delete_TimeDomain(long jarg1);
  public final static native boolean Range_isValid(long jarg1, Range jarg1_);
  public final static native String Range_toString(long jarg1, Range jarg1_);
  public final static native java.math.BigInteger Range_ilwisType(long jarg1, Range jarg1_);
  public final static native java.math.BigInteger Range_valueType(long jarg1, Range jarg1_);
  public final static native long Range_ensure__SWIG_0(long jarg1, Range jarg1_, long jarg2, boolean jarg3);
  public final static native long Range_ensure__SWIG_1(long jarg1, Range jarg1_, long jarg2);
  public final static native boolean Range_contains__SWIG_0(long jarg1, Range jarg1_, long jarg2, boolean jarg3);
  public final static native boolean Range_contains__SWIG_1(long jarg1, Range jarg1_, long jarg2);
  public final static native boolean Range_isContinuous(long jarg1, Range jarg1_);
  public final static native long Range_impliedValue(long jarg1, Range jarg1_, long jarg2);
  public final static native long new_NumericRange__SWIG_0(double jarg1, double jarg2, double jarg3);
  public final static native long new_NumericRange__SWIG_1(double jarg1, double jarg2);
  public final static native long new_NumericRange__SWIG_2(long jarg1, NumericRange jarg1_);
  public final static native long new_NumericRange__SWIG_3(long jarg1);
  public final static native long new_NumericRange__SWIG_4();
  public final static native void delete_NumericRange(long jarg1);
  public final static native boolean NumericRange_contains__SWIG_0(long jarg1, NumericRange jarg1_, double jarg2, boolean jarg3);
  public final static native boolean NumericRange_contains__SWIG_1(long jarg1, NumericRange jarg1_, double jarg2);
  public final static native double NumericRange_max(long jarg1, NumericRange jarg1_);
  public final static native void NumericRange_setMax(long jarg1, NumericRange jarg1_, double jarg2);
  public final static native double NumericRange_min(long jarg1, NumericRange jarg1_);
  public final static native void NumericRange_setMin(long jarg1, NumericRange jarg1_, double jarg2);
  public final static native double NumericRange_distance(long jarg1, NumericRange jarg1_);
  public final static native void NumericRange_setResolution(long jarg1, NumericRange jarg1_, double jarg2);
  public final static native double NumericRange_resolution(long jarg1, NumericRange jarg1_);
  public final static native void NumericRange_set(long jarg1, NumericRange jarg1_, long jarg2, NumericRange jarg2_);
  public final static native long NumericRange_iterator(long jarg1, NumericRange jarg1_);
  public final static native long NumericRange_begin(long jarg1, NumericRange jarg1_);
  public final static native long NumericRange_end(long jarg1, NumericRange jarg1_);
  public final static native void NumericRange_clear(long jarg1, NumericRange jarg1_);
  public final static native long ItemRange_count(long jarg1, ItemRange jarg1_);
  public final static native void ItemRange_remove(long jarg1, ItemRange jarg1_, String jarg2);
  public final static native void ItemRange_clear(long jarg1, ItemRange jarg1_);
  public final static native long new_ItemRange();
  public final static native void delete_ItemRange(long jarg1);
  public final static native long new_NumericItemRange();
  public final static native void NumericItemRange_add__SWIG_0(long jarg1, NumericItemRange jarg1_, String jarg2, double jarg3, double jarg4, double jarg5);
  public final static native void NumericItemRange_add__SWIG_1(long jarg1, NumericItemRange jarg1_, String jarg2, double jarg3, double jarg4);
  public final static native long NumericItemRange_listAll(long jarg1, NumericItemRange jarg1_);
  public final static native double NumericItemRange_index(long jarg1, NumericItemRange jarg1_, double jarg2);
  public final static native int NumericItemRange_gotoIndex(long jarg1, NumericItemRange jarg1_, int jarg2, int jarg3);
  public final static native long NumericItemRange_clone(long jarg1, NumericItemRange jarg1_);
  public final static native void delete_NumericItemRange(long jarg1);
  public final static native long new_NamedItemRange();
  public final static native void NamedItemRange_add(long jarg1, NamedItemRange jarg1_, String jarg2);
  public final static native long NamedItemRange_listAll(long jarg1, NamedItemRange jarg1_);
  public final static native int NamedItemRange_gotoIndex(long jarg1, NamedItemRange jarg1_, int jarg2, int jarg3);
  public final static native long NamedItemRange_clone(long jarg1, NamedItemRange jarg1_);
  public final static native void delete_NamedItemRange(long jarg1);
  public final static native long new_ThematicRange();
  public final static native void ThematicRange_add__SWIG_0(long jarg1, ThematicRange jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void ThematicRange_add__SWIG_1(long jarg1, ThematicRange jarg1_, String jarg2, String jarg3);
  public final static native void ThematicRange_add__SWIG_2(long jarg1, ThematicRange jarg1_, String jarg2);
  public final static native long ThematicRange_listAll(long jarg1, ThematicRange jarg1_);
  public final static native long ThematicRange_clone(long jarg1, ThematicRange jarg1_);
  public final static native void delete_ThematicRange(long jarg1);
  public final static native long new_ColorRange__SWIG_0();
  public final static native long new_ColorRange__SWIG_1(java.math.BigInteger jarg1, int jarg2);
  public final static native int ColorRange_defaultColorModel__SWIG_0(long jarg1, ColorRange jarg1_);
  public final static native void ColorRange_defaultColorModel__SWIG_1(long jarg1, ColorRange jarg1_, int jarg2);
  public final static native long ColorRange_toColor__SWIG_0(java.math.BigInteger jarg1, int jarg2, String jarg3);
  public final static native long ColorRange_toColor__SWIG_1(java.math.BigInteger jarg1, int jarg2);
  public final static native long ColorRange_toColor__SWIG_2(long jarg1, vectord jarg1_, int jarg2, String jarg3);
  public final static native long ColorRange_toColor__SWIG_3(long jarg1, vectord jarg1_, int jarg2);
  public final static native long ColorRange_toColor__SWIG_4(String jarg1, int jarg2, String jarg3);
  public final static native long ColorRange_toColor__SWIG_5(String jarg1, int jarg2);
  public final static native void delete_ColorRange(long jarg1);
  public final static native long new_ContinuousColorRange__SWIG_0();
  public final static native long new_ContinuousColorRange__SWIG_1(long jarg1, Color jarg1_, long jarg2, Color jarg2_);
  public final static native long ContinuousColorRange_clone(long jarg1, ContinuousColorRange jarg1_);
  public final static native long ContinuousColorRange_ensure__SWIG_0(long jarg1, ContinuousColorRange jarg1_, long jarg2, boolean jarg3);
  public final static native long ContinuousColorRange_ensure__SWIG_1(long jarg1, ContinuousColorRange jarg1_, long jarg2);
  public final static native boolean ContinuousColorRange_containsVar__SWIG_0(long jarg1, ContinuousColorRange jarg1_, long jarg2, boolean jarg3);
  public final static native boolean ContinuousColorRange_containsVar__SWIG_1(long jarg1, ContinuousColorRange jarg1_, long jarg2);
  public final static native boolean ContinuousColorRange_containsColor__SWIG_0(long jarg1, ContinuousColorRange jarg1_, long jarg2, Color jarg2_, boolean jarg3);
  public final static native boolean ContinuousColorRange_containsColor__SWIG_1(long jarg1, ContinuousColorRange jarg1_, long jarg2, Color jarg2_);
  public final static native boolean ContinuousColorRange_containsRange__SWIG_0(long jarg1, ContinuousColorRange jarg1_, long jarg2, ColorRange jarg2_, boolean jarg3);
  public final static native boolean ContinuousColorRange_containsRange__SWIG_1(long jarg1, ContinuousColorRange jarg1_, long jarg2, ColorRange jarg2_);
  public final static native void delete_ContinuousColorRange(long jarg1);
  public final static native long new_ColorPalette();
  public final static native long ColorPalette_item__SWIG_0(long jarg1, ColorPalette jarg1_, long jarg2);
  public final static native long ColorPalette_item__SWIG_1(long jarg1, ColorPalette jarg1_, String jarg2);
  public final static native long ColorPalette_itemByOrder(long jarg1, ColorPalette jarg1_, long jarg2);
  public final static native long ColorPalette_color(long jarg1, ColorPalette jarg1_, int jarg2);
  public final static native void ColorPalette_add(long jarg1, ColorPalette jarg1_, long jarg2, Color jarg2_);
  public final static native void ColorPalette_remove(long jarg1, ColorPalette jarg1_, String jarg2);
  public final static native void ColorPalette_clear(long jarg1, ColorPalette jarg1_);
  public final static native boolean ColorPalette_containsColor__SWIG_0(long jarg1, ColorPalette jarg1_, long jarg2, Color jarg2_, boolean jarg3);
  public final static native boolean ColorPalette_containsColor__SWIG_1(long jarg1, ColorPalette jarg1_, long jarg2, Color jarg2_);
  public final static native boolean ColorPalette_containsRange__SWIG_0(long jarg1, ColorPalette jarg1_, long jarg2, ColorRange jarg2_, boolean jarg3);
  public final static native boolean ColorPalette_containsRange__SWIG_1(long jarg1, ColorPalette jarg1_, long jarg2, ColorRange jarg2_);
  public final static native long ColorPalette_count(long jarg1, ColorPalette jarg1_);
  public final static native long ColorPalette_valueAt(long jarg1, ColorPalette jarg1_, long jarg2, long jarg3, ItemRange jarg3_);
  public final static native int ColorPalette_gotoIndex(long jarg1, ColorPalette jarg1_, int jarg2, int jarg3);
  public final static native void delete_ColorPalette(long jarg1);
  public final static native long new_NumericRangeIterator__SWIG_0(long jarg1, Range jarg1_);
  public final static native long new_NumericRangeIterator__SWIG_1(long jarg1, NumericRangeIterator jarg1_);
  public final static native long new_NumericRangeIterator__SWIG_2(long jarg1);
  public final static native void delete_NumericRangeIterator(long jarg1);
  public final static native boolean NumericRangeIterator_isValid(long jarg1, NumericRangeIterator jarg1_);
  public final static native String NumericRangeIterator_toString(long jarg1, NumericRangeIterator jarg1_);
  public final static native long NumericRangeIterator_iterator(long jarg1, NumericRangeIterator jarg1_);
  public final static native double NumericRangeIterator__next(long jarg1, NumericRangeIterator jarg1_);
  public final static native boolean NumericRangeIterator_hasNext(long jarg1, NumericRangeIterator jarg1_);
  public final static native double NumericRangeIterator_current(long jarg1, NumericRangeIterator jarg1_);
  public final static native double NumericRangeIterator_get(long jarg1, NumericRangeIterator jarg1_, long jarg2);
  public final static native long NumericRangeIterator___radd__(long jarg1, NumericRangeIterator jarg1_, int jarg2);
  public final static native long NumericRangeIterator_add(long jarg1, NumericRangeIterator jarg1_, int jarg2);
  public final static native long NumericRangeIterator_increase(long jarg1, NumericRangeIterator jarg1_, int jarg2);
  public final static native long NumericRangeIterator_subtract(long jarg1, NumericRangeIterator jarg1_, int jarg2);
  public final static native long NumericRangeIterator_decrease(long jarg1, NumericRangeIterator jarg1_, int jarg2);
  public final static native int NumericRangeIterator_compareTo(long jarg1, NumericRangeIterator jarg1_, long jarg2, NumericRangeIterator jarg2_);
  public final static native void NumericRangeIterator_setRange(long jarg1, NumericRangeIterator jarg1_, long jarg2, Range jarg2_);
  public final static native void NumericRangeIterator_remove(long jarg1, NumericRangeIterator jarg1_);
  public final static native long new_DataDefinition__SWIG_0();
  public final static native void delete_DataDefinition(long jarg1);
  public final static native long new_DataDefinition__SWIG_1(long jarg1, Domain jarg1_, long jarg2, Range jarg2_);
  public final static native long new_DataDefinition__SWIG_2(long jarg1, Domain jarg1_);
  public final static native long new_DataDefinition__SWIG_3(long jarg1, DataDefinition jarg1_);
  public final static native String DataDefinition_toString(long jarg1, DataDefinition jarg1_);
  public final static native boolean DataDefinition_isValid(long jarg1, DataDefinition jarg1_);
  public final static native void DataDefinition_range__SWIG_0(long jarg1, DataDefinition jarg1_, long jarg2, Range jarg2_);
  public final static native void DataDefinition_domain__SWIG_0(long jarg1, DataDefinition jarg1_, long jarg2, Domain jarg2_);
  public final static native boolean DataDefinition_isCompatibleWith(long jarg1, DataDefinition jarg1_, long jarg2, DataDefinition jarg2_);
  public final static native long DataDefinition_merge(long jarg1, DataDefinition jarg1_, long jarg2, DataDefinition jarg2_, long jarg3, DataDefinition jarg3_);
  public final static native long DataDefinition_set(long jarg1, DataDefinition jarg1_, long jarg2, DataDefinition jarg2_);
  public final static native long DataDefinition_range__SWIG_1(long jarg1, DataDefinition jarg1_);
  public final static native long DataDefinition_domain__SWIG_1(long jarg1, DataDefinition jarg1_);
  public final static native long new_ColumnDefinition__SWIG_0();
  public final static native long new_ColumnDefinition__SWIG_1(long jarg1, ColumnDefinition jarg1_, long jarg2);
  public final static native long new_ColumnDefinition__SWIG_2(String jarg1, long jarg2, DataDefinition jarg2_, java.math.BigInteger jarg3);
  public final static native long new_ColumnDefinition__SWIG_3(long jarg1, ColumnDefinition jarg1_);
  public final static native long new_ColumnDefinition__SWIG_4(String jarg1, long jarg2, Domain jarg2_, java.math.BigInteger jarg3);
  public final static native void delete_ColumnDefinition(long jarg1);
  public final static native long ColumnDefinition_datadef(long jarg1, ColumnDefinition jarg1_);
  public final static native void ColumnDefinition_columnindex__SWIG_0(long jarg1, ColumnDefinition jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger ColumnDefinition_columnindex__SWIG_1(long jarg1, ColumnDefinition jarg1_);
  public final static native boolean ColumnDefinition_isChanged(long jarg1, ColumnDefinition jarg1_);
  public final static native void ColumnDefinition_changed(long jarg1, ColumnDefinition jarg1_, boolean jarg2);
  public final static native String ColumnDefinition_toString(long jarg1, ColumnDefinition jarg1_);
  public final static native boolean ColumnDefinition_isValid(long jarg1, ColumnDefinition jarg1_);
  public final static native double rUNDEF_get();
  public final static native int iUNDEF_get();
  public final static native long i64UNDEF_get();
  public final static native long new_DomainItem__SWIG_0();
  public final static native long new_DomainItem__SWIG_1(long jarg1);
  public final static native boolean DomainItem_isValid(long jarg1, DomainItem jarg1_);
  public final static native String DomainItem_toString(long jarg1, DomainItem jarg1_);
  public final static native java.math.BigInteger DomainItem_ilwisType(long jarg1, DomainItem jarg1_);
  public final static native long DomainItem_clone(long jarg1, DomainItem jarg1_);
  public final static native void DomainItem_raw__SWIG_0(long jarg1, DomainItem jarg1_, long jarg2);
  public final static native long DomainItem_raw__SWIG_1(long jarg1, DomainItem jarg1_);
  public final static native void delete_DomainItem(long jarg1);
  public final static native long new_IndexedIdentifier__SWIG_0();
  public final static native long new_IndexedIdentifier__SWIG_1(String jarg1, long jarg2, int jarg3);
  public final static native long new_IndexedIdentifier__SWIG_2(String jarg1, long jarg2);
  public final static native long new_IndexedIdentifier__SWIG_3(String jarg1);
  public final static native long new_IndexedIdentifier__SWIG_4(long jarg1);
  public final static native String IndexedIdentifier_prefix(long jarg1, IndexedIdentifier jarg1_);
  public final static native void IndexedIdentifier_setPrefix(long jarg1, IndexedIdentifier jarg1_, String jarg2);
  public final static native boolean IndexedIdentifier_equals(long jarg1, IndexedIdentifier jarg1_, long jarg2, IndexedIdentifier jarg2_);
  public final static native void delete_IndexedIdentifier(long jarg1);
  public final static native long new_NamedIdentifier__SWIG_0();
  public final static native long new_NamedIdentifier__SWIG_1(String jarg1, long jarg2);
  public final static native long new_NamedIdentifier__SWIG_2(String jarg1);
  public final static native long new_NamedIdentifier__SWIG_3(long jarg1);
  public final static native void NamedIdentifier_setName(long jarg1, NamedIdentifier jarg1_, String jarg2);
  public final static native boolean NamedIdentifier_equals(long jarg1, NamedIdentifier jarg1_, long jarg2, NamedIdentifier jarg2_);
  public final static native void delete_NamedIdentifier(long jarg1);
  public final static native long new_ThematicItem__SWIG_0();
  public final static native long new_ThematicItem__SWIG_1(long jarg1);
  public final static native String ThematicItem_description__SWIG_0(long jarg1, ThematicItem jarg1_);
  public final static native void ThematicItem_description__SWIG_1(long jarg1, ThematicItem jarg1_, String jarg2);
  public final static native String ThematicItem_code__SWIG_0(long jarg1, ThematicItem jarg1_);
  public final static native void ThematicItem_code__SWIG_1(long jarg1, ThematicItem jarg1_, String jarg2);
  public final static native void delete_ThematicItem(long jarg1);
  public final static native long new_Interval__SWIG_0();
  public final static native long new_Interval__SWIG_1(String jarg1, long jarg2, NumericRange jarg2_);
  public final static native boolean Interval_isOrdered(long jarg1, Interval jarg1_);
  public final static native long Interval_range__SWIG_0(long jarg1, Interval jarg1_);
  public final static native void Interval_range__SWIG_1(long jarg1, Interval jarg1_, long jarg2, NumericRange jarg2_);
  public final static native void delete_Interval(long jarg1);
  public final static native long new_VertexIterator__SWIG_0();
  public final static native long new_VertexIterator__SWIG_1(long jarg1, Geometry jarg1_);
  public final static native long new_VertexIterator__SWIG_2(String jarg1);
  public final static native void delete_VertexIterator(long jarg1);
  public final static native boolean VertexIterator_isValid(long jarg1, VertexIterator jarg1_);
  public final static native String VertexIterator_toString(long jarg1, VertexIterator jarg1_);
  public final static native long VertexIterator_iterator(long jarg1, VertexIterator jarg1_);
  public final static native long VertexIterator_next(long jarg1, VertexIterator jarg1_);
  public final static native boolean VertexIterator_hasNext(long jarg1, VertexIterator jarg1_);
  public final static native long VertexIterator_add(long jarg1, VertexIterator jarg1_, int jarg2);
  public final static native long VertexIterator___radd__(long jarg1, VertexIterator jarg1_, int jarg2);
  public final static native long VertexIterator_increase(long jarg1, VertexIterator jarg1_, int jarg2);
  public final static native long VertexIterator_subtract(long jarg1, VertexIterator jarg1_, int jarg2);
  public final static native long VertexIterator___rsub__(long jarg1, VertexIterator jarg1_, int jarg2);
  public final static native long VertexIterator_decrease(long jarg1, VertexIterator jarg1_, int jarg2);
  public final static native long VertexIterator_get(long jarg1, VertexIterator jarg1_, long jarg2);
  public final static native long VertexIterator_current(long jarg1, VertexIterator jarg1_);
  public final static native int VertexIterator_compareTo(long jarg1, VertexIterator jarg1_, long jarg2, VertexIterator jarg2_);
  public final static native boolean VertexIterator_nextSubGeometry(long jarg1, VertexIterator jarg1_);
  public final static native boolean VertexIterator_isInteriorVertex(long jarg1, VertexIterator jarg1_);
  public final static native long VertexIterator_begin(long jarg1, VertexIterator jarg1_);
  public final static native long VertexIterator_end(long jarg1, VertexIterator jarg1_);
  public final static native long new_vectori__SWIG_0();
  public final static native long new_vectori__SWIG_1(long jarg1);
  public final static native long vectori_size(long jarg1, vectori jarg1_);
  public final static native long vectori_capacity(long jarg1, vectori jarg1_);
  public final static native void vectori_reserve(long jarg1, vectori jarg1_, long jarg2);
  public final static native boolean vectori_isEmpty(long jarg1, vectori jarg1_);
  public final static native void vectori_clear(long jarg1, vectori jarg1_);
  public final static native void vectori_add(long jarg1, vectori jarg1_, int jarg2);
  public final static native int vectori_get(long jarg1, vectori jarg1_, int jarg2);
  public final static native void vectori_set(long jarg1, vectori jarg1_, int jarg2, int jarg3);
  public final static native void delete_vectori(long jarg1);
  public final static native long new_vectord__SWIG_0();
  public final static native long new_vectord__SWIG_1(long jarg1);
  public final static native long vectord_size(long jarg1, vectord jarg1_);
  public final static native long vectord_capacity(long jarg1, vectord jarg1_);
  public final static native void vectord_reserve(long jarg1, vectord jarg1_, long jarg2);
  public final static native boolean vectord_isEmpty(long jarg1, vectord jarg1_);
  public final static native void vectord_clear(long jarg1, vectord jarg1_);
  public final static native void vectord_add(long jarg1, vectord jarg1_, double jarg2);
  public final static native double vectord_get(long jarg1, vectord jarg1_, int jarg2);
  public final static native void vectord_set(long jarg1, vectord jarg1_, int jarg2, double jarg3);
  public final static native void delete_vectord(long jarg1);
  public final static native long new_vectorl__SWIG_0();
  public final static native long new_vectorl__SWIG_1(long jarg1);
  public final static native long vectorl_size(long jarg1, vectorl jarg1_);
  public final static native long vectorl_capacity(long jarg1, vectorl jarg1_);
  public final static native void vectorl_reserve(long jarg1, vectorl jarg1_, long jarg2);
  public final static native boolean vectorl_isEmpty(long jarg1, vectorl jarg1_);
  public final static native void vectorl_clear(long jarg1, vectorl jarg1_);
  public final static native void vectorl_add(long jarg1, vectorl jarg1_, long jarg2);
  public final static native long vectorl_get(long jarg1, vectorl jarg1_, int jarg2);
  public final static native void vectorl_set(long jarg1, vectorl jarg1_, int jarg2, long jarg3);
  public final static native void delete_vectorl(long jarg1);
  public final static native long new_mapsd__SWIG_0();
  public final static native long new_mapsd__SWIG_1(long jarg1, mapsd jarg1_);
  public final static native long mapsd_size(long jarg1, mapsd jarg1_);
  public final static native boolean mapsd_empty(long jarg1, mapsd jarg1_);
  public final static native void mapsd_clear(long jarg1, mapsd jarg1_);
  public final static native double mapsd_get(long jarg1, mapsd jarg1_, String jarg2);
  public final static native void mapsd_set(long jarg1, mapsd jarg1_, String jarg2, double jarg3);
  public final static native void mapsd_del(long jarg1, mapsd jarg1_, String jarg2);
  public final static native boolean mapsd_has_key(long jarg1, mapsd jarg1_, String jarg2);
  public final static native void delete_mapsd(long jarg1);
  public final static native long new_vectorvs__SWIG_0();
  public final static native long new_vectorvs__SWIG_1(long jarg1);
  public final static native long vectorvs_size(long jarg1, vectorvs jarg1_);
  public final static native long vectorvs_capacity(long jarg1, vectorvs jarg1_);
  public final static native void vectorvs_reserve(long jarg1, vectorvs jarg1_, long jarg2);
  public final static native boolean vectorvs_isEmpty(long jarg1, vectorvs jarg1_);
  public final static native void vectorvs_clear(long jarg1, vectorvs jarg1_);
  public final static native void vectorvs_add(long jarg1, vectorvs jarg1_, long jarg2, vectors jarg2_);
  public final static native long vectorvs_get(long jarg1, vectorvs jarg1_, int jarg2);
  public final static native void vectorvs_set(long jarg1, vectorvs jarg1_, int jarg2, long jarg3, vectors jarg3_);
  public final static native void delete_vectorvs(long jarg1);
  public final static native long new_vectors__SWIG_0();
  public final static native long new_vectors__SWIG_1(long jarg1);
  public final static native long vectors_size(long jarg1, vectors jarg1_);
  public final static native long vectors_capacity(long jarg1, vectors jarg1_);
  public final static native void vectors_reserve(long jarg1, vectors jarg1_, long jarg2);
  public final static native boolean vectors_isEmpty(long jarg1, vectors jarg1_);
  public final static native void vectors_clear(long jarg1, vectors jarg1_);
  public final static native void vectors_add(long jarg1, vectors jarg1_, String jarg2);
  public final static native String vectors_get(long jarg1, vectors jarg1_, int jarg2);
  public final static native void vectors_set(long jarg1, vectors jarg1_, int jarg2, String jarg3);
  public final static native void delete_vectors(long jarg1);
  public final static native long new_vectorOperation__SWIG_0();
  public final static native long new_vectorOperation__SWIG_1(long jarg1);
  public final static native long vectorOperation_size(long jarg1, vectorOperation jarg1_);
  public final static native long vectorOperation_capacity(long jarg1, vectorOperation jarg1_);
  public final static native void vectorOperation_reserve(long jarg1, vectorOperation jarg1_, long jarg2);
  public final static native boolean vectorOperation_isEmpty(long jarg1, vectorOperation jarg1_);
  public final static native void vectorOperation_clear(long jarg1, vectorOperation jarg1_);
  public final static native void vectorOperation_add(long jarg1, vectorOperation jarg1_, long jarg2, IlwisOperation jarg2_);
  public final static native long vectorOperation_get(long jarg1, vectorOperation jarg1_, int jarg2);
  public final static native void vectorOperation_set(long jarg1, vectorOperation jarg1_, int jarg2, long jarg3, IlwisOperation jarg3_);
  public final static native void delete_vectorOperation(long jarg1);
  public final static native long IlwisObject_SWIGUpcast(long jarg1);
  public final static native long CoordinateSystem_SWIGUpcast(long jarg1);
  public final static native long Table_SWIGUpcast(long jarg1);
  public final static native long Coverage_SWIGUpcast(long jarg1);
  public final static native long Geometry_SWIGUpcast(long jarg1);
  public final static native long Feature_SWIGUpcast(long jarg1);
  public final static native long FeatureCoverage_SWIGUpcast(long jarg1);
  public final static native long GeoReference_SWIGUpcast(long jarg1);
  public final static native long RasterCoverage_SWIGUpcast(long jarg1);
  public final static native long Catalog_SWIGUpcast(long jarg1);
  public final static native long Domain_SWIGUpcast(long jarg1);
  public final static native long NumericDomain_SWIGUpcast(long jarg1);
  public final static native long ItemDomain_SWIGUpcast(long jarg1);
  public final static native long ColorDomain_SWIGUpcast(long jarg1);
  public final static native long TextDomain_SWIGUpcast(long jarg1);
  public final static native long TimeDomain_SWIGUpcast(long jarg1);
  public final static native long Range_SWIGUpcast(long jarg1);
  public final static native long NumericRange_SWIGUpcast(long jarg1);
  public final static native long ItemRange_SWIGUpcast(long jarg1);
  public final static native long NumericItemRange_SWIGUpcast(long jarg1);
  public final static native long NamedItemRange_SWIGUpcast(long jarg1);
  public final static native long ThematicRange_SWIGUpcast(long jarg1);
  public final static native long ColorRange_SWIGUpcast(long jarg1);
  public final static native long ContinuousColorRange_SWIGUpcast(long jarg1);
  public final static native long ColorPalette_SWIGUpcast(long jarg1);
  public final static native long DomainItem_SWIGUpcast(long jarg1);
  public final static native long IndexedIdentifier_SWIGUpcast(long jarg1);
  public final static native long NamedIdentifier_SWIGUpcast(long jarg1);
  public final static native long ThematicItem_SWIGUpcast(long jarg1);
  public final static native long Interval_SWIGUpcast(long jarg1);
}
